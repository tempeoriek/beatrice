@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
  //Layout = "~/Views/Shared/_LayoutTwo.cshtml";

  //title, meta
  Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
  Html.AddMetaDescriptionParts(Model.MetaDescription);
  Html.AddMetaKeywordParts(Model.MetaKeywords);

  var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

  //canonical URL
  if (seoSettings.CanonicalUrlsEnabled)
  {
    var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
    Html.AddCanonicalUrlParts(productUrl);
  }

  //open graph META tags
  if (seoSettings.OpenGraphMetaTags)
  {
    var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
    Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
    Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
  }

  //Twitter META tags
  if (seoSettings.TwitterMetaTags)
  {
    var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
    Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
  }

  var absolutepath = new Uri(HttpContext.Current.Request.Url.AbsoluteUri);
  var query_type = "";
  var count_text = "";
  var count_style = "";
  bool type_detail = false;
  if (!String.IsNullOrEmpty(HttpUtility.ParseQueryString(absolutepath.Query).Get("type"))) {
    query_type = HttpUtility.ParseQueryString(absolutepath.Query).Get("type").ToLower();
    if (query_type.Equals("flash-sale")) { 
      count_text = "FLASH SALE";
      count_style = "background-color: #9D3131; height: 50px; margin-bottom: 10% !important";
      type_detail = true;
    }
    if (query_type.Equals("coming-soon")) { 
      type_detail = true;
      count_text = "COMING SOON";
      count_style = "background-color: #D8C7BD; height: 50px; margin-bottom: 10% !important";
    }
  }
}


<div class="container product-detail" style="margin-top: -1%;">
  <div class="row" style="margin-top: 5%;">
    <div class="col-12 col-sm-7 col-md-7">
      @Html.Partial("_ProductDetailsPictures", Model)
    </div>

    <div class="col-12 col-sm-5 col-md-5 p-4">
      @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
          if (type_detail) {
            @* FOR FLASH SALE *@
            <div class="row" style="@count_style">
              <div class="col-5 d-flex justify-content-start align-items-center">
                <span id="text-status-change" class="worksans-medium" style="color: white; font-size: 16px;">@count_text</span>
              </div>
              <div class="col-7 d-flex justify-content-end align-items-center">
                <span class="worksans-reg" style="font-style: italic; color: white; font-size: 16px;" id="demo" />
              </div>
            </div>
          }

          <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id" style="margin-top: 5%;">
            <h1 class="worksans-medium text-product-detail" itemprop="name">
              @Model.Name
            </h1>

            @{
              //notify me if oos
              var totalstock = 0;
              if (Model.ProductAttributeCombinations.Count() == 0) {
                totalstock = 1;
              } else {
                foreach (var pa in Model.ProductAttributeCombinations)
                {
                  totalstock += pa.StockQuantity;
                }
              }

              totalstock = Model.FlashsaleStatus != null && totalstock > 0 ? Model.FlashsaleRemainingStock : totalstock;

              if (totalstock <= 0) {
                <p class="text-center" style="color: #9D3131; font-weight: bold; font-size: 16px;">
                  Out of stock
                </p>
              } else {
                var dataDictPrice = new ViewDataDictionary();
                dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
                
                if (Model.AddToCart.AvailableForPreOrder) {
                  <div class="description" style="color: black;">
                    PRE-ORDER
                  </div>
                } else {
                  <div class="d-flex justify-content-center align-items-center">
                    @Html.Partial("_ProductPrice", Model.ProductPrice, dataDictPrice)
                  </div>
                }
              }
            
              
              <div class="row no-gutters pt-4">
                @if (Model.ProductAttributeCombinations.Count() > 0) {
                  <div class="col-12">
                    @{
                      var dataDictAttributes = new ViewDataDictionary();
                      dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                      @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)}
                  </div>
                } else {
                  <div class="col-12">
                    @{
                      var dataDictAttributes = new ViewDataDictionary();
                      dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                      @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)}
                  </div>
                }
                
                @if (totalstock <= 0) {
                    <button disabled type="button"class="btn-addcart-disabled">
                      <span>Add to Shopping Bag</span>
                    </button>
                } else {
                  var dataDictAddToCart = new ViewDataDictionary();
                  dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                  @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                 
                }
                
              </div>

              @* description 2 *@
              <div>
                <ul class="nav nav-pills-product mb-3" id="pills-tab" role="tablist">
                  <li class="nav-item" style="margin-right: 10px;">
                    <a class="nav-link-product worksans-medium active" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true">
                      Details
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link-product worksans-medium" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false">
                      Info
                    </a>
                  </li>
                </ul>
                <div class="tab-content" id="pills-tabContent">
                  <div style="font-size: 16px; color: #525252;" class="tab-pane fade show active no-style" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                    <div>
                      @Html.Raw(Model.FullDescription)
                    </div>
                  </div>
                  <div style="font-size: 16px; color: #525252;" class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                    @Model.ShortDescription
                  </div>
                </div>
              </div>

              if (totalstock <= 0) {
                <div class="d-flex justify-content-start align-items-center">
                  <span class="worksans-reg" style="font-size: 14px; color: #9D5D3E;">Get an alert when the product is in stock:</span>
                </div>
                <div class="d-flex justify-content-start align-items-center mb-4">
                  <div id="nieuwsbrief" style="width: 80%;">
                    <form action="" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
                      <div class="form-group justify-content-center mb-4 mb-md-0" style="vertical-align:top;">
                        <input id="mce-EMAIL" class="email form-footer" type="email" style="border-bottom: 1px solid #9D5D3E; color: #9D5D3E; padding: 15px 0; background-color: white;" name="EMAIL" placeholder="Enter your e-mail" value="" required="required" />
                        <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_0713301c8224b9979b17bdd9b_0e2ea9797e" tabindex="-1" value=""></div>
                      </div>
                      <br>
                      <button id="mc-embedded-subscribe" style="width: 98%; height: 45px; margin: 0 !important; border: 1px solid #9D5D3E;" type="submit" name="subscribe" value="">
                        <span style="color: #9D5D3E; font-weight: bold;">Notify Me!</span>
                      </button>
                    </form>
                    <script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script>
                    <script type='text/javascript'>(function ($) { window.fnames = new Array(); window.ftypes = new Array(); fnames[0] = 'EMAIL'; ftypes[0] = 'email'; fnames[1] = 'FNAME'; ftypes[1] = 'text'; fnames[2] = 'LNAME'; ftypes[2] = 'text'; }(jQuery)); var $mcj = jQuery.noConflict(true);</script>
                  </div>
                  <div id="nieuwsbrief-msg" style="display:none;">
                    Thank you for subscribing!
                  </div>
                </div>
              }

              <div class="d-flex justify-content-start align-items-center">
                <span class="worksans-medium" style="color: #454545; font-size: 16px; font-weight: bold; margin-right: 10px;">SHARE</span>
                <a style="margin-right: 10px;" href="https://www.instagram.com/beatriceclothing/">
                  <img src="~/Themes/v1/Content/images/ig.svg" />
                </a>
                <a style="margin-right: 10px;" href="https://www.facebook.com/BeatriceClothing/">
                  <img src="~/Themes/v1/Content/images/fb.svg" />
                </a>
                <a style="margin-right: 10px; cursor: pointer;" onclick="copyUrl()">
                  <img src="~/Themes/v1/Content/images/share.svg" />
                </a>
              </div>
            }
            
          </div>
        }
    </div>
  </div>
  


</div>

@* Related Products Desktop *@
@Html.Action("RelatedProducts", "Product", new {productId = Model.Id})
@Html.Action("RelatedProducts", "Product", new {productId = Model.Id})

  <script>
    function copyUrl() {
      var dummy = document.createElement('input'),
        text = window.location.href;
      document.body.appendChild(dummy);
      dummy.value = text;
      dummy.select();
      document.execCommand('copy');
      document.body.removeChild(dummy);
      alert("Copied")
    }

    $(document).ready(function () {
      $('.carousel').carousel({
        touch: true
      });

    });

  </script>
  <link rel="stylesheet" type="text/css" href="~/Scripts/app/slick/slick.css">
  <link rel="stylesheet" type="text/css" href="~/Scripts/app/slick/slick-theme.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
  <link href="~/Themes/v1/Content/homepage.css" rel="stylesheet" />
  <script src="~/Scripts/app/slick/slick.js" type="text/javascript" charset="utf-8"></script>
  <script>
    function numberWithCommas(x) {
      return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    $(document).ready(function () {
      $('.carouselhero').slick({
        slidesToShow: 1,
        dots: false,
        centerMode: false,
        arrows: false,
        autoplay: true,
        autoplaySpeed: 2000,
      });
    });
    $(document).ready(function () {
      $('.carouselhero2').slick({
        slidesToShow: 2,
        dots: false,
        centerMode: false,
        arrows: false,
      });
    });
    $(document).ready(function () {
      $('.carouseldesktoprelated').slick({
        slidesToShow: 4,
        dots: false,
        centerMode: false,
      });
    });
    $(document).ready(function () {
      $('.carouselmobile').slick({
        slidesToShow: 2,
        dots: false,
        centerMode: false,
      });
    });

    $('.prevslider').click(function () {
      $('.carouseldesktoprelated').slick('slickPrev');
    })

    $('.nextslider').click(function () {
      $('.carouseldesktoprelated').slick('slickNext');
    })

    $('.leftslidermobile').click(function () {
      $('.carouselmobile').slick('slickPrev');
    })

    $('.rightslidermobile').click(function () {
      $('.carouselmobile').slick('slickNext');
    })

    $('.add').click(function () {
      if ($(this).prev().val() < 9) {
        $(this).prev().val(+$(this).prev().val() + 1);
      }
    });
    $('.sub').click(function () {
      if ($(this).next().val() > 1) {
        if ($(this).next().val() > 1) $(this).next().val(+$(this).next().val() - 1);
      }
    });

    function btnclick() {
      if ($(".btn-addcart").innerHTML == "ADD TO BAG") {
        $(".btn-addcart").innerHTML = "✓ SEE BAG";
      }
      else {
        $(".btn-addcart").innerHTML = "ADD TO BAG";
      }
    }
    //console.log(`PRODUCT DETAIL`);
    var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
    //console.log(model);    
    
    let today_cs = new Date();
    let searchParams = new URLSearchParams(window.location.search);

    //for flash sale count down
    let start_day = model && model.FlashsaleStart_date ? new Date(model.FlashsaleStart_date).getDate() : null;
    let start_month = model && model.FlashsaleStart_date ? new Date(model.FlashsaleStart_date).getMonth() : null;
    let start_year = model && model.FlashsaleStart_date ? new Date(model.FlashsaleStart_date).getFullYear() : null;
    
    let end_day = model && model.FlashsaleEnd_date ? new Date(model.FlashsaleEnd_date).getDate() : null;
    let end_month = model && model.FlashsaleEnd_date ? new Date(model.FlashsaleEnd_date).getMonth() : null;
    let end_year = model && model.FlashsaleEnd_date ? new Date(model.FlashsaleEnd_date).getFullYear() : null;

    let start_date_flashsale = model && model.FlashsaleStart_date && model.FlashsaleStart_time? `${start_month+1}/${start_day}/${start_year} ${model.FlashsaleStart_time}:00` : null;
    let end_date_flashsale = model && model.FlashsaleEnd_date && model.FlashsaleEnd_time ? `${end_month+1}/${end_day}/${end_year} ${model.FlashsaleEnd_time}:00` : null;

    let query_date = end_date_flashsale && searchParams.get('type') == 'flash-sale' ? end_date_flashsale : 
      searchParams.has('end_date') && searchParams.get('type') == 'coming-soon' ? moment(searchParams.get('end_date'), 'YYYY-MM-DD HH:mm:ss Z').toDate() : null;
    let query_date_start = start_date_flashsale && searchParams.get('type') == 'flash-sale' ? start_date_flashsale : 
      searchParams.has('start_date') && searchParams.get('type') == 'coming-soon' ? moment(searchParams.get('start_date'), 'YYYY-MM-DD HH:mm:ss Z').toDate() : null;

    var countDownDate = new Date(`${query_date}`).getTime();
    var countDownDateStart = new Date(`${query_date_start}`).getTime();
    var x = setInterval(function() {
      var now = new Date().getTime();
      
      var distance = countDownDate - now;
      var distance_start = countDownDateStart - now;
      
      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);

      var days_start = Math.floor(distance_start / (1000 * 60 * 60 * 24));
      var hours_start = Math.floor((distance_start % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes_start = Math.floor((distance_start % (1000 * 60 * 60)) / (1000 * 60));
      var seconds_start = Math.floor((distance_start % (1000 * 60)) / 1000);

      let result_time = `${days} : ${hours} : ${minutes} : ${days} : ${seconds}`;
      let result_time_start = `${days_start} : ${hours_start} : ${minutes_start} : ${seconds_start}`;
      if (model && distance < 0 && distance_start < 0) {
        clearInterval(x);
        document.getElementById("demo").innerHTML = "Ended";
      } else {
        if (model && distance_start > 0) {
          document.getElementById("demo").innerHTML = "Available in  " + result_time_start ;
          if (searchParams.get('type') == 'coming-soon') $("#text-price-change").text("IDR ???.000");
        } else if (model && distance_start < 0){
          let demo_text = searchParams.get('type') == 'coming-soon' ? "Available Now" : "Ends in  " + result_time;
          document.getElementById("demo").innerHTML = demo_text;
          if (searchParams.get('type') == 'coming-soon') $("#text-status-change").text("NEW ARRIVAL");
          if (searchParams.get('type') == 'coming-soon') $("#text-price-change").text(model.ProductPrice.Price);
        } 
      }

      if (searchParams.get('type') == 'flash-sale'){
        var price_flashsale = `IDR ${numberWithCommas(model.FlashsalePrice)}`;
        $("#text-price-change").text(price_flashsale);
      }
    }, 1000);

  </script>
