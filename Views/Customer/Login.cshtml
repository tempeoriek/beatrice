@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;

@{

  //title
  Html.AddTitleParts(T("PageTitle.Login").Text);

  //register URL with return URL (if specified)
  var registerUrl = Url.RouteUrl("Register");

  var returnurl = "";
  if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
  {
    returnurl = this.Context.Request.QueryString["returnUrl"];

    var webHelper = EngineContext.Current.Resolve<IWebHelper>();

    registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
  }


  }



<div class="col-main-width">
  <!--sign in sign up-->
  <div class="mt-5 d-block d-md-none hidden-md hidden-lg"></div>
  <div class="mt-5 d-none d-md-block hidden-sm hidden-xs"></div>

  <div class="form-login">
    <div class="text-center" style="margin: 0 70px;">
      <h2 class="abhaye mb-4" id="title" style="font-size: 30px;">Sign In</h2>

      <div id="login-thirdparty" class="row" style="height: 50px;">
        <div class="col-12 col-md-6 col-sm-6 p-2 d-flex justify-content-center" style="align-self: center;">
          @* <button type="submit" class="button_google">Google</button> *@
          <div class="g-signin2" data-width="170" data-height="50" data-onsuccess="onSignIn"></div>
          
        </div>
        <div class="col-12 col-md-6 col-sm-6 p-2" style="align-self: center; left: 3%">
          @* <button type="submit" class="button_facebook">Facebook</button> *@
          @* <fb:login-button class="fb_button" length="long" size="large" scope="public_profile,email" onlogin="checkLoginState();">
              <span style= "margin-right: 10px;">Facebook</span>
          </fb:login-button> *@
          @* <button id="customBtn" onclick="checkLoginState()">
            <span>Facebook</span>
          </button> *@
          <div 
            class="fb-login-button" 
            data-size="large" 
            scope="email"
            data-button-type="login_with" 
            data-layout="default" 
            data-auto-logout-link="false" 
            data-use-continue-as="false"
            onlogin="checkLoginState()"></div>
        </div>
      </div>

      <p id="subtitle" style="font-size: 14px; margin-top: 50px;">Already a member?</p>
    </div>

    <div class="tab-content">
      <div class="container tab-pane active" id="signin">
        <br />

        @using (Ajax.BeginForm("Login", "Customer", new AjaxOptions
        {
          InsertionMode = InsertionMode.InsertAfter,
          HttpMethod = "POST",
          LoadingElementId = "ajax-loader",
          OnSuccess = "loginCallback",
          UpdateTargetId = "pnlMsg"
        }, new { id = "form1", @class = "login-form" }))


        {
          @Html.AntiForgeryToken()
          @Html.Hidden("ReturnUrl", @returnurl)

          var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
          <div id="pnlMsg" class="text-danger">@validationSummary</div>
          <div class="form-fields">
            <div class="form-group">
              @if (Model.UsernamesEnabled)
              {
                <label style="font-size: 14px; font-weight: bold;">Username</label>
                @Html.TextBoxFor(m => m.Username, new { @class = "form_signin", autofocus = "autofocus", placeholder = "Username" })
                @Html.ValidationMessageFor(m => m.Username)
              }
              else
              {
                <input type="email" placeholder="E-mail" name="Email" class="form_signin" required>
                @Html.ValidationMessageFor(m => m.Email)
              }
            </div>
            <div class="form-group">
              @Html.PasswordFor(m => m.Password, new { @class = "form_signin pb-2", placeholder = "Password", id="PasswordLogin" })
              @Html.ValidationMessageFor(m => m.Password)
              <input type="checkbox" onclick="showPassword()">&nbsp;Show Password
            </div>
            <div class="form-group">
              <span class="psw" style="font-weight: bold;">
                @Html.RouteLink(T("Account.Login.ForgotPassword").Text, "PasswordRecovery")
              </span>
            </div>


            <div class="mb-4" style="display: flex; justify-content: center; align-items: center;">
              <button type="submit" class="btn btn-default button_signin">Sign In</button>
            </div>
            <div class="sign-up-info">
              <ul class="nav nav-pills form-caption" style="color: black;font-size: 14px;">
                <p>Not a member? 
                <a id="signup-nav" style="color: #9D5D3E; margin: 0; padding: 0; cursor: pointer;" class="">REGISTER</a>
                </p>
              </ul>
            </div>
            
            <hr class="mt-0 pt-0">
            <div class="d-flex justify-content-center align-items-center">
              <input type="button" class="btn btn-default button_signin checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
            </div>
            @if (Model.DisplayCaptcha)
            {
              <div class="captcha-box">
                @Html.Raw(Html.GenerateCaptcha())
              </div>
            }
          </div>
        }


      </div>
      <div class="container tab-pane fade" id="signup">
        <br />
        @Html.Action("Register", "Customer")
      </div>
    </div>
  </div>


  <!--end of sign in sign up-->

  

</div>


@section scripts
{

  @Scripts.Render("~/bundles/jqueryval")
  <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
  <script>
    

    function loginCallback(data) {

      if (data.ok) {
        if (data.msg != "")
        {
          $("#pnlMsg").html(data.msg);
        }
        else
        {
          $("#pnlMsg").html('');
        }

        //alert(data.newurl);

        window.location = data.newurl;
      }
      else {
        $("#pnlMsg").html(data.msg);
      }
    }

    function showPassword() {
      var x = document.getElementById("PasswordLogin");
      if (x.type === "password") {
        x.type = "text";
      } else {
        x.type = "password";
      }
    }
    function reqfailed() {
      $("#pnlfailure").html("Sorry, an error occured.");
    }

    function loginCallbackRegister(data) {

      if (data.ok) {
        if (data.msg != "") {
          $("#pnlfailure").html(data.msg);
        }
        else {
          $("#pnlfailure").html('');
        }

        $("#form-register-body").hide();

        //window.location = data.newurl;
      }
      else {
        $("#pnlfailure").html(data.msg);
      }
    }

    $(document).ready(function(){  
      if ($("#login-nav").hasClass("active")) {
        $('#title').text('Log in');
        $('#subtitle').text('Please log in or sign up for an account');
      } else if ($("#signup-nav").hasClass("active")) {
        $('#title').text('Create Account');
        $('#subtitle').text('Creating an account has many benefits: check out faster, keep more than one address, track orders and more.');
      }
    });  

    $("#login-nav").click(function(){  
      setTimeout(function() { 
        $('#title').text('Log in');
        $('#login-thirdparty').css('display', 'flex');
        $('#subtitle').text('Please log in or sign up for an account');
        $('#signin').addClass('active');
        $('#signup').removeClass('show active');
      }, 100);
    });

    $("#signup-nav").click(function(){  
      setTimeout(function() { 
        $('#title').text('Register');
        $('#login-thirdparty').css('display', 'none');
        $('#subtitle').text('');
        $('#signin').removeClass('active');
        $('#signup').addClass('show active');
      }, 100);
    });

    $("#connected83ou6ga22w4d").text("Google");

  </script>

}


  