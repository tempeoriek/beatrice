@model CustomerAddressListModel
@using Nop.Web.Models.Customer;

@{
  @*default address*@
  var defAdressId = 0;
  if(ViewBag.defAddressId !=null)
  {
    defAdressId = ViewBag.defAddressId;
  }
    
  var classActive = "";
  var radioChecked = "";
}



  @* <div class="d-xs-block d-sm-block"><br /></div> *@


<div class="mydetails-right">
  
  <div class="collapse" id="address-add">
    <div class="address-box">
      <div class="address-category">
        <div class="address-tick">
          <label class="container-checkbox">
            Address 1
            <input type="checkbox" checked="checked">
            <span class="checkmark"></span>
          </label>
        </div>
        <a href="#">
          <div class="address-delete">
            <img src="~/Content/Images/cup.png" class="trash-icon" />
            <p>Delete</p>
          </div>
        </a>
      </div>
      <div class="address-list">
        <p>
          JL. ABC no.09 rt.001 rw.001
          12332 Jakarta Selatan
          DKI Jakarta Indonesia
        </p>
        <p>
          Jane Doe
          janedoe@emailaddress.com
          +62 8123344533
        </p>
      </div>
      <div class="address-edit"><a href="#">edit</a></div>
    </div>
    
  </div>
   
</div>   




  @if (Model.Addresses != null)
  {
    if (Model.Addresses.Count > 0)
    {
      <div class="address-list">
        <div>
          @for (int i = 0; i < Model.Addresses.Count; i++)
          {
            var address = Model.Addresses[i];
            classActive = "";
            radioChecked = "";
            if (address.Id == defAdressId)
            {
              radioChecked = "checked=checked";
              classActive = "selected";
            }
            <div>
              <div class="radio-default">
                <input type="radio" id="optionsRadios@(i + 1)" name="optionsRadios" value="@Model.Addresses[i].Id" class="radio-default" @radioChecked>
                <label for="optionsRadios@(i + 1)" style="font-size:10px;">
                  <span></span>
                </label>
                <span class="worksans-medium" style="color: #525252; font-size: 22px; margin-left: 5px;">Address @(i + 1)</span>
              </div>
              <div style="color: #525252; font-size: 14px;">
                @address.Address1, @address.Address2 <br />
                @address.City, @address.ZipPostalCode,  <br />
                @address.StateProvinceName, @address.CountryName <br />
                @address.PhoneNumber
              </div>
            </div>
            <br/>

            <div class="row p-0 m-0">
              <div class="col-6 text-center m-0 p-1">
                <input type="button" class="btn btn-link @classActive" onclick="location.href='@(Url.RouteUrl("CustomerAddressEdit", new { addressId = address.Id }))'" value='@T("Common.Edit")' style="color:#292929; font-size: 12px; border: 1px solid #454545; height: 100%; width: 100%;" />
              </div>
              <div class="col-6 text-center m-0 p-1">
                <input type="button" class="btn btn-link" onclick="if (confirm('@(T("Common.AreYouSure").Text)')) {location.href='@(Url.RouteUrl("CustomerAddressDelete", new { addressId = address.Id }))';}" value="@T("Common.Delete")" style="font-size:12px; border: 1px solid #454545; height: 100%; width: 100%;" />
              </div>
            </div>
            <hr style="width: 350%; margin-bottom: 30px; margin-top: 30px;"/>
          }
        </div>
        
        @* <ul class="list-unstyled">
          @for (int i = 0; i < Model.Addresses.Count; i++)
          {


            var address = Model.Addresses[i];

            classActive = "";
            radioChecked = "";
            if (address.Id == defAdressId)
            {
              radioChecked = "checked=checked";
              classActive = "selected";
            }

            <li>
              <div class="address-item address-box">
                <div class="address-category">

                  <div class="radio-default">
                    <input type="radio" id="optionsRadios@(i + 1)" name="optionsRadios" value="@Model.Addresses[i].Id" class="radio-default" @radioChecked>
                    <label for="optionsRadios@(i + 1)" style="font-size:12px;">
                      <span></span> Address @(i + 1)
                    </label>
                  </div>


                  <div class="address-delete">
                  <img src="~/Content/Images/cup.png" class="trash-icon" />
                  <p><input type="button" class="btn btn-link" onclick="if (confirm('@(T("Common.AreYouSure").Text)')) {location.href='@(Url.RouteUrl("CustomerAddressDelete", new { addressId = address.Id }))';}" value="@T("Common.Delete")" style="font-size:0.92em;" /></p>
                  </div>
                </div>

                <p class="address-item address-list">

                  @if (address.CompanyEnabled && !String.IsNullOrEmpty(address.Company))
                  {
                    @address.Company<br />
                  }

                  @address.FirstName @address.LastName<br />
                  @Html.LabelFor(model => model.Addresses[i].Email, new { }, ":") @address.Email<br />

                  @if (address.StreetAddressEnabled)
                  {
                    @address.Address1
                  }
                  @if (address.StreetAddress2Enabled && !String.IsNullOrEmpty(address.Address2))
                  {
                    @address.Address2<br />
                  }


                  @if (address.CityEnabled)
                  {
                    @address.City;
                  }

                  @if (address.ZipPostalCodeEnabled)
                  {

                    @address.ZipPostalCode; <br />
                  }


                  @if (address.StateProvinceEnabled)
                  {
                    if (address.StateProvinceId != null)
                    {
                      @address.StateProvinceName; <text> - </text>
                    }

                  }

                  @if (address.CountryEnabled && !String.IsNullOrEmpty(address.CountryName))
                  {
                    @address.CountryName<br />
                  }
                  @if (!String.IsNullOrEmpty(address.FormattedCustomAddressAttributes))
                  {

                    @Html.Raw(address.FormattedCustomAddressAttributes)<br />
                  }

                  @if (address.PhoneEnabled)
                  {

                    <text>T </text> @address.PhoneNumber<br />
                  }
                  @if (address.FaxEnabled)
                  {
                    @Html.LabelFor(model => model.Addresses[i].FaxNumber, new { }, ":")
                    @address.FaxNumber<br />
                  }




                </p>
                <div class="address-edit">
                  <input type="button" class="btn btn-link @classActive" onclick="location.href='@(Url.RouteUrl("CustomerAddressEdit", new { addressId = address.Id }))'" value='@T("Common.Edit")' style="color:#292929; font-size:0.92em;" />
                </div>
              </div>
            </li>  
          }
        </ul> *@
      </div>
    }
    else
    {
      <div class="no-data">
        @T("Account.CustomerAddresses.NoAddresses")
      </div>
    }
    <div class="form-group">
      <div class="buttons">
        <button type="submit" class="btn btn-default" id="add-new-address">Add new address</button>
      </div>
    </div>
  }



<script type="text/javascript">
  $(function () {

    $('.radio-default').on('change', function () {
      
      var selectedItem = $('input[name="optionsRadios"]:checked').val();
      $.ajax({
        cache: false,
        type: "POST",
        url: "/customer/SetDefaultAddress",
        data: { "addressId": selectedItem },
      success: function (data) {
      },
      error: function (xhr, ajaxOptions, thrownError) {
        //alert('Failed to perform the operation.');
      }
    });
    });

     
  });
</script>
