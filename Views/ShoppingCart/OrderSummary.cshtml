
@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();

}

<div class="order-summary-content" id="winkelmandje">
    <span id="cartqty" style="display:none;">@Model.Items.Count</span>
    @Html.Partial("_OrderReviewData", Model.OrderReviewData)

    @if (Model.Items.Count > 0)
    {
        if (Model.Warnings.Count > 0)
        {
            <div class="alert alert-danger square-box" id="pnlfailure">

                @foreach (var warning in Model.Warnings)
                {
                    <div>@warning</div>
                }
            </div>
        }

        @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
    using (Ajax.BeginForm("UpdateItemInCart", "ShoppingCart", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnFailure = "reqfailed",
        LoadingElementId = "ajax-loader",
        UpdateTargetId = "winkelmandje",
        OnSuccess = "frmUpdateComplete"
    }, new { enctype = "multipart/form-data", id = "form1" }))
    {
        @Html.AntiForgeryToken()
        <img id="ajax-loader" src="~/Themes/v1/Content/images/ajax_loader_small.gif" style="display:none;" />
        @Html.Hidden("remove")


            <div id="bigCart" class="d-none d-md-block">
                <div class="order-summary ">
                    <div class="order-summary-header">
                        <div style="width:40%; padding-left: 30px;"><p style="font-size: 16px;" class="text-left order-summary-text">@Model.Items.Count() PRODUCTS IN BAG</p></div>
                        @* <div style="width:20%;"><p class="text-center order-summary-text">PRICE</p></div> *@
                        @* <div style="width:20%;"><p class="text-center order-summary-text">QUANTITY</p></div> *@
                        @* <div style="width:20%;"><p class="text-center order-summary-text">TOTAL</p></div> *@
                    </div>

                    @foreach (var item in Model.Items)
                    {
                        <div class="order-summary-item">
                            <div class="cart-column1">

                                @if (Model.ShowProductImages)
                                {
                                    <div class="image">
                                        <img src="@item.Picture.ImageUrl" />
                                    </div>
                                }
                                <div style="margin-left: 30px;">
                                    <span class="order-summary-text">

                                        @if (Model.IsEditable && item.AllowItemEditing)
                                        {

                                            var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);

                                            <a style="font-size: 16px; color: #454545;" href="@editCartItemUrl" class="product-name" title="@item.ProductName">@item.ProductName</a>
                                        }
                                        else
                                        {
                                            <a style="font-size: 16px; color: #454545;" href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                        }
                                    </span>

                                    @if (Model.ShowSku)
                                    {
                                        <span class="sku-number">@item.Sku</span>
                                    }


                                    @if (item.ProductManufacturers != null)
                                    {
                                        <span class="manufacturer" style="font-style:italic;">
                                            @foreach (var brand in item.ProductManufacturers)
                                            {
                                                <a style="font-size: 16px; color: #454545;" href="~/@brand.SeName">@brand.Name</a>
                                            }
                                        </span>
                                    }


                                    @if (!String.IsNullOrEmpty(item.Size))
                                    {
                                        <span class="attributes text-font">
                                            @Html.Raw(item.Size)
                                        </span>
                                    }

                                    <div class="hidden-xs hidden-sm">
                                        @* @if (Model.IsEditable)
                                        {
                                            <div class="cart-delete">
                                                <a name="lnkremove" value="@item.Id" class="lnkremove" style="display:flex">
                                                    <img src="~/Content/Images/cup.png" class="trash-icon" style="width:11px;" />
                                                    <p class="order-summary-text" style="color:#000; margin-top:-6px;">Delete</p>
                                                </a>
                                            
                                            </div>
                                        } *@
                                    </div>

                                    @if (item.Warnings.Count > 0)
                                    {
                                        <span class="text-danger">
                                            @for (int i = 0; i < item.Warnings.Count; i++)
                                            {
                                                @item.Warnings[i]
                                            }
                                        </span>
                                    }
                                </div>
                            </div>
                            <div class="cart-column2">
                                <p style="font-size: 16px; color: #454545;" class="order-summary-text">@item.UnitPrice</p>
                            </div>
                            <div class="cart-column3">
                                @if (Model.IsEditable)
                                {
                                    @*<button type="button" id="sub" class="sub quantity-btn">-</button>
                                    <input type="number" id="1" value="1" min="1" max="9" style="background-color:transparent; border:none;" />
                                    <button type="button" id="add" class="add quantity-btn">+</button>*@
                                    <div class="pl-qty" style="font-size: 16px; color: #454545;"><button type="submit" name="qtyMin" value="@item.Id" class="btn">-</button><button class="btn btn-line"><span>@item.Quantity</span></button><button type="submit" name="qtyPlus" value="@item.Id" class="btn">+</button></div>
                                }
                                else
                                {
                                    <span class="product-quantity">@item.Quantity</span>}
                            </div>
                            <div class="cart-column4">
                                <p style="font-size: 16px; color: #454545;" class="order-summary-text">@item.SubTotal</p>
                                @if (!String.IsNullOrEmpty(item.Discount))
                                {
                                    <span class="discount">
                                        @T("ShoppingCart.ItemYouSave") @item.Discount
                                    </span>
                                }
                            </div>
                            <div class="cart-column5">
                                @if (Model.IsEditable)
                                {
                                    <div class="cart-delete">
                                        <a name="lnkremove" value="@item.Id" class="lnkremove" style="display:flex">
                                            <img src="~/Content/Images/cup.png" class="trash-icon" style="width:11px;" />
                                        </a>
                                        
                                    </div>
                                }
                            </div>

                        </div>
                    }
                </div>
            </div>

            <!--order summary mobile-->
            <div class="order-summary d-block d-sm-none">

                @foreach (var item in Model.Items)
                {

                    <div class="order-summary-item-mobile py-3">
                        @if (Model.ShowProductImages)
                        {
                            <div class="cart-column1-mobile">
                                <div><img src="@item.Picture.ImageUrl" class="img-fluid" /></div>
                            </div>
                        }
                        <div class="cart-column2-mobile">
                            <div>
                                <p>
                                    @if (Model.IsEditable && item.AllowItemEditing)
                            {

                                var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);

                                        <a href="@editCartItemUrl" class="product-name" title="@item.ProductName">@item.ProductName</a>
                                    }
                                    else
                                    {
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                    }
                                </p>
                                @if (!String.IsNullOrEmpty(item.Size))
                                {
                                    <p>@Html.Raw(item.Size)</p>
                                }

                                <p>Qty: @item.Quantity</p>
                            </div>

                            
                        </div>
                        <div class="cart-column3-mobile" style="display: grid;">
                            @if (Model.IsEditable)
                            {
                                    <a name="lnkremove" value="@item.Id" class="lnkremove">
                                        <img src="~/Content/Images/cup.png" class="trash-icon" style="width:12px;" />
                                    </a>
                            }
                            <p style="align-items: self-end; display: grid;">@item.UnitPrice</p>

                        </div>
                    </div>
                }


            </div>

            <!--voucer code-->
            @* <div class="d-block d-sm-none" style="margin: 30px 0; border: 1px solid #707070; padding: 20px; background-color: #E5E3DF4D;">
                <p class="m-0 p-0 mb-3" style="font-weight: bold; color: #454545; font-size: 16px; text-transform: uppercase;">Redeem Voucher or Points</p>
                <p class="m-0 p-0" style="font-weight: bold; color: #454545; font-size: 14px;">Redeem Points</p> 
                <p class="m-0 p-0" style="color: #454545; font-size: 14px;">You have IDR 125.000 Points</p> 
                <input type="text" placeholder="IDR 100.000" style="padding-left: 15px; width: 65%; background-color: transparent; height: 50px; border-right: 0;">
                <button style="background-color: transparent; height: 50px; width: 35%; margin-left: -5px; border: 1px solid #707070;">APPLY</button>
                <p class="m-0 p-0" style="color: #9D5D3E; font-size: 14px;">You’ll get IDR 24.000 after checking out</p> 
                <hr class="mb-3 mt-3" style="margin: -7%">
                <p class="m-0 p-0" style="font-weight: bold; color: #454545; font-size: 14px;">Redeem Voucher</p> 
                <input type="text" placeholder="Coupon Code" style="padding-left: 15px; width: 65%; background-color: transparent; height: 50px; border-right: 0;">
                <button style="background-color: transparent; height: 50px; width: 35%; margin-left: -5px; border: 1px solid #707070;">APPLY</button>
                <div class="row mt-3 m-0" style="line-height: 15px; font-size: 12px; text-align: center; ">
                    <div style="display: grid; align-items: center; width: 65%; height: 80px; border-left: 1px solid #707070; border-bottom: 1px solid #707070; border-top: 1px solid #707070;">
                        <p class="m-0 p-0" style="font-size: 13px">10% Off by using coupon code</p>
                        <b class="m-0 p-0" style="font-size: 15px">"BEATRICE101X"</b>
                        <p class="m-0 p-0" style="font-size: 9px">*T&C: one voucher per transaction</p>
                    </div>
                    <div style="width: 35%;">
                        <button style="background-color: transparent; height: 80px; width: 100%; margin: 0; padding: 0; border: 1px solid #707070;">APPLY</button>
                    </div>
                </div>
                <div class="row mt-3 m-0" style="line-height: 15px; font-size: 12px; text-align: center; ">
                    <div style="display: grid; align-items: center; width: 65%; height: 80px; border-left: 1px solid #707070; border-bottom: 1px solid #707070; border-top: 1px solid #707070;">
                        <p class="m-0 p-0" style="font-size: 13px">10% Off by using coupon code</p>
                        <b class="m-0 p-0" style="font-size: 15px">"BEATRICE101X"</b>
                        <p class="m-0 p-0" style="font-size: 9px">*T&C: one voucher per transaction</p>
                    </div>
                    <div style="width: 35%;">
                        <button style="background-color: transparent; height: 80px; width: 100%; margin: 0; padding: 0; border: 1px solid #707070;">APPLY</button>
                    </div>
                </div>
            </div> *@

            <!-- cart footer -->
            <div class="cart-footer d-block d-sm-none">
                @Html.Partial("_GiftCardDiscountBox", Model.DiscountBox)
                @Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })


                @if (Model.IsEditable)
                {
                    if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                    {
                        <div class="min-amount-warning">@Model.MinOrderSubtotalWarning</div>
                    }
                }

            
            </div>

        if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
        {
            var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
            //of course, you can modify appropriate locales to include VAT info there
            <div class="tax-shipping-info">
                @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
            </div>
        }


        if (Model.IsEditable)
        {
            if (Model.TermsOfServiceOnShoppingCartPage)
            {
            <br />
                        <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display:none;">
                            <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                        </div>
                        <div class="terms-of-service">
                            <input id="termsofservice" type="checkbox" name="termsofservice" />
                            <span>@T("Checkout.TermsOfService.IAccept")<a class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "conditionsofuse" })', 450, 500, true)">@T("Checkout.TermsOfService.Read")</a></span>
                        </div>
                        <br />
            }
        }


        if (Model.IsEditable)
        {
            <div class="d-none d-md-block">
                <div class="row">

                    <div class="col-6 col-sm-6 checkout-margin-left">
                        @if (Model.IsEditable)
                        {
                            <button type="submit" id="continueshopping" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="btn btn-default mt-4" style="width: 368px;"> < @T("ShoppingCart.ContinueShopping")</button>
                        }
                    </div>

                    <div class="col-6 col-sm-6 mt-4 d-flex justify-content-end">
                        <div>
                            @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                            {
                                <script type="text/javascript">
                                    $(document).ready(function () {
                                        $('#checkout').click(function () {
                                            //terms of service
                                            var termOfServiceOk = true;
                                            if ($('#termsofservice').length > 0) {
                                                //terms of service element exists
                                                if (!$('#termsofservice').is(':checked')) {
                                                    $("#terms-of-service-warning-box").dialog();
                                                    termOfServiceOk = false;
                                                } else {
                                                    termOfServiceOk = true;
                                                }
                                            }
                                            return termOfServiceOk;
                                        });
                                    });
                                </script>

                                <button 
                                    type="submit" 
                                    id="checkout" 
                                    name="checkout" 
                                    value="checkout" 
                                    class="btn btn-default" 
                                    style="width: 368px;">
                                    Checkout >
                                </button>
                            }
                        </div>

                    </div>
                </div>
            </div>
                    }
                }

            }
            else
            {
        <div class="no-data text-center">
            @T("ShoppingCart.CartIsEmpty")
        </div>
    }

  


</div>
<br />
  @*<div style="display:flex;flex-direction:column; align-items:center; justify-content:center;">
          <label class="container-checkbox" style="font-size:14px;color:#000;">
              I agree with the terms of service and I adhere to them unconditionally
              <input type="checkbox">
              <span class="checkmark"></span>
          </label>
          <br /><button class="button_kivee btn-cart">CONTINUE</button>
      </div>*@
<script>
    $('.add').click(function () {
        if ($(this).prev().val() < 9) {
            $(this).prev().val(+$(this).prev().val() + 1);
        }
    });
    $('.sub').click(function () {
        if ($(this).next().val() > 1) {
            if ($(this).next().val() > 1) $(this).next().val(+$(this).next().val() - 1);
        }
    });
</script>



<script>
    jQuery(document).ready(function () {
        // This button will increment the value
        $('.qtyplus').click(function (e) {
            // Stop acting like a button
            e.preventDefault();
            // Get the field name
            fieldName = $(this).attr('field');
            // Get its current value
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            // If is not undefined
            if (!isNaN(currentVal)) {
                // Increment
                $('input[name=' + fieldName + ']').val(currentVal + 1);
            } else {
                // Otherwise put a 0 there
                $('input[name=' + fieldName + ']').val(0);
            }
        });
        // This button will decrement the value till 0
        $(".qtyminus").click(function (e) {
            // Stop acting like a button
            e.preventDefault();
            // Get the field name
            fieldName = $(this).attr('field');
            // Get its current value
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            // If it isn't undefined or its greater than 0
            if (!isNaN(currentVal) && currentVal > 0) {
                // Decrement one
                $('input[name=' + fieldName + ']').val(currentVal - 1);
            } else {
                // Otherwise put a 0 there
                $('input[name=' + fieldName + ']').val(0);
            }
        });

    });

    $(".lnkremove").click(function (e) {
        var r = $(this).attr("value");
        $("#remove").val(r);
        $("#form1").submit();
        return false;
    });

    //console.log(`Cart`);
	var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
	//console.log(model);    
</script>
