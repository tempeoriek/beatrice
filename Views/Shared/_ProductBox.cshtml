@model Nop.Web.Models.Catalog.ProductOverviewModel

@{
  string absolutepath = HttpContext.Current.Request.Url.AbsolutePath;
  var absolutepath2 = new Uri(HttpContext.Current.Request.Url.AbsoluteUri);

  bool modified_product_box = absolutepath.Equals("/coming-soon") || absolutepath.Equals("/catalog/comingsoon") || absolutepath.Equals("/flash-sale") || absolutepath.Equals("/flashsale/show") ? true : false;
  string type_url = absolutepath.Equals("/coming-soon") || absolutepath.Equals("/catalog/comingsoon") ? "coming-soon" : 
    absolutepath.Equals("/flash-sale") || absolutepath.Equals("/flashsale/show") ? "flash-sale" :
    absolutepath.Equals("/new-arrival") ? "new-arrival" : null;
  string strInfoNewArrivals = absolutepath.Equals("/coming-soon") || absolutepath.Equals("/catalog/comingsoon") ? "IDR ???.000" : "";
  string query_type = !String.IsNullOrEmpty(HttpUtility.ParseQueryString(absolutepath2.Query).Get("type")) ? HttpUtility.ParseQueryString(absolutepath2.Query).Get("type").ToLower() : null;
  string query_start = !String.IsNullOrEmpty(HttpUtility.ParseQueryString(absolutepath2.Query).Get("start_date")) ? HttpUtility.ParseQueryString(absolutepath2.Query).Get("start_date").ToLower() : null;
  string query_end = !String.IsNullOrEmpty(HttpUtility.ParseQueryString(absolutepath2.Query).Get("end_date")) ? HttpUtility.ParseQueryString(absolutepath2.Query).Get("end_date").ToLower() : null;
  if (query_type == "flash-sale" && Model.FlashsaleStatus == "finished") {
    query_type = null;
    query_start = null;
    query_end = null;
  }
}
<div class="product-item">
  <div class="ori-product-img">
      @if (modified_product_box) {
        <div style="position: relative;">
          <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName, start_date= @query_start, end_date = @query_end, type = @query_type })" class="clean">
            <img src="@Model.DefaultPictureModel.ImageUrl" class="img-fluid center-block"/>
          </a>
          @if (type_url == "coming-soon") {
            <div style="bottom: 0; position: absolute; width: 100%; background-color: rgba(255,255,255, 0.7);">
              <p class="m-0 text-center" style="color: #9D5D3E; height: 100%; font-size: 17px;">COMING SOON</p>
            </div>
          } else if (type_url == "flash-sale" && Model.FlashsaleStatus == "on going") {
            <div class="d-nxone d-md-block hidden-xs hidden-sm">
              <div style="top: 0; position: absolute; height: 20%; width: 20%; background-color: #9D3131;">
                <p class="m-0 flash-sale-text" style="font-size: 20px; display: flex !important; justify-content: center; align-items: center;">@Model.DiscountPercentage% <br> OFF</p>
              </div>
            </div>
                      
            <div class="d-block d-md-none hidden-md hidden-xl">
              <div style="top: 0; position: absolute; height: 20%; width: 20%; background-color: #9D3131;">
                <p class="m-0 flash-sale-text" style="font-size: 12px; line-height: 17px;">@Model.DiscountPercentage% OFF</p>
              </div>
            </div>
          }
        </div>
      } else {
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" class="clean">
          <img src="@Model.DefaultPictureModel.ImageUrl" class="img-fluid center-block"/>
        </a>
      }
      
      @if (Model.Quantity == 0) {
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName, start_date= @query_start, end_date = @query_end, type = @query_type })" class="clean">
          <div class="d-flex justify-content-center align-items-center backdrop-product">
            <p class="worksans-reg" style="margin: 0; color: white; font-size: 23px; text-transform: capitalize;">Out of stock</p>
          </div>
        </a>

      }
  </div>

  <div class="description">
    <p class="d-flex m-0  justify-content-start align-items-center" style="line-height: 1.5em; justify-content: space-between; align-items: center; height: 56px;">
      <a class="clean worksans-reg text-product-box worksans-medium" href="@Url.RouteUrl("Product", new { SeName = Model.SeName, start_date= @query_start, end_date = @query_end, type = @query_type })">
        @Model.Name
      </a>
      @if (modified_product_box && type_url == "new-arrival") {
        <span class="text-out-of-stock worksans-reg d-none d-md-block hidden-xs hidden-sm" style="color: #9D5D3E; font-size: 20px; text-transform: capitalize !important;">New Arrival</span>
      }
    </p>

    <div class="prices text-left" style="line-height: 1.5em; padding-top: 0;">
      @if (Model.Quantity == 0 && !modified_product_box) {
        <div class="text-out-of-stock price worksans-reg" style="color: #9D5D3E; font-size: 20px; text-transform: capitalize;">Out of stock</div>
      } else if (Model.ProductPrice.AvailableForPreOrder) {
        <div class="price worksans-reg">Request A Quote</div>
      } else if (type_url == "coming-soon") {
        <div id="price-cs-@Model.Id" class="worksans-reg prices" style="color: #454545; text-transform: initial; font-size: 20px;">@strInfoNewArrivals</div>
      } else if (type_url == "flash-sale" && Model.FlashsaleStatus != "finished") {
        <div class="price old--price">
          <span class="worksans-reg old--price" style="text-decoration:line-through; font-size: 20px; color: #BCBCBC;">
            @Model.ProductPrice.Price
          </span>
        </div>
        if (Model.FlashsaleStatus == "coming soon") {
          <div class="price text-product-box worksans-reg" style="color: #9D3131 !important;">IDR ???.000</div>
        } else {
          <div class="price text-product-box worksans-reg" style="color: #9D3131 !important;">IDR @String.Format( "{0:#,##0.##}", Model.FlashSalePrice )</div>
        }

      } else {
        if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice) || Model.ProductPrice.DisplayTaxShippingInfo)
        {
            if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
            {

                <div class="price old--price">
                  <span class="worksans-reg old--price" style="text-decoration:line-through; font-size: 20px; color: #525252;">
                    @Model.ProductPrice.OldPrice
                  </span>
                </div>

            }
            <div class="price actual--price worksans-reg"><b class="text-product-box">@Model.ProductPrice.Price</b></div>
        }
        else
        {
            <div class="price text-product-box worksans-reg">@Model.ProductPrice.Price</div>
        }
      }
    </div>
    @* @if (Model.Quantity > 0) {
      <div class="text-out-of-stock worksans-reg" style="color: #9D3131; text-transform: initial; font-size: 20px;">@strInfo</div>
    } *@
    @if (modified_product_box && type_url == "flash-sale" && Model.FlashsaleStatus != "coming soon" && Model.FlashsaleStatus != "finished") {
      var status_prod = Model.StockFlashSaleRemaining / Model.StockFlashSale * 100 < 40 ? "Low in Stocks" : "Available";

      <div class="" style="width: inherit;">
        <progress id="progress-@Model.Id" value="@Model.StockFlashSaleRemaining" max="@Model.StockFlashSale" style="width: 100%; height: 8px;"/>
      </div>
      <div class="price text-product-box worksans-reg">@status_prod</div>
    } else if (Model.FlashsaleStatus == "finished") {
      <div class="price text-product-box worksans-reg" style="color: #9D3131 !important">Available with normal price</div>
    }
    @if (modified_product_box && type_url == "new-arrival") {
        <span class="text-out-of-stock worksans-reg d-block d-md-none hidden-md hidden-lg" style="color: #9D5D3E; font-size: 20px; text-transform: capitalize !important;">New Arrival</span>
      }
    
  </div>
</div>


<script>
	//console.log(`PRODUCT BOX`);
	var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
	//console.log(model);
</script>
